import heapq
class Solution:
    #code Aniii
    #Function to return the minimum cost to react at bottom
    #right cell from top left cell.
    def minimumCostPath(self, grid):
        #Code here
        n = len(grid)
        visited = set()
        visited.add((0,0))
        q = [(grid[0][0],0,0)]
        d = [(0,-1),(0,1),(1,0),(-1,0)]
        
        while q:
            cost,x,y = heapq.heappop(q)
            if x == n-1 and y == n-1:
                return cost
            for dx,dy in d:
                nx = x + dx
                ny = y + dy
                if 0<= nx < n and 0<= ny < n and (nx,ny) not in visited:
                    visited.add((nx,ny))
                    heapq.heappush(q,(cost + grid[nx][ny],nx,ny))

--------------------------------------------------------------------------------------------------------- 
qs-

                  
                  
